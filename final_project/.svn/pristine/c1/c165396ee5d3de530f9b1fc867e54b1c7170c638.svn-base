<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.login.mapper.LoginMapper">
	<!-- 회원상세정보 resultMap -->
	<resultMap type="kr.or.ddit.emp.vo.EmpVO" id="userAuthMap">
		<id     property="empCd" column="USERNAME" />
		<result property="empNm" column="EMP_NM" />
		<result property="empPw" column="PASSWORD" />
		<result property="secCd" column="SEC_CD" />
		<result property="secNm" column="SEC_NM" />
		<result property="deptNm" column="DEPT_NM" />
		<result property="empPrno" column="EMP_PRNO" />
		<result property="empSex" column="EMP_SEX" />
		<result property="empAddr" column="EMP_ADDR" />
		<result property="empHp" column="EMP_HP" />
		<result property="position" column="POSITION" />
		<result property="lcnsNo" column="LCNS_NO" />
		<result property="empPic" column="EMP_PIC" />
		<result property="stateCd" column="STATE_CD" />
		<result property="cdNm" column="CD_NM" />
		<result property="hireDate" column="HIRE_DATE" />
		<result property="leaveYn" column="LEAVE_YN" />
		<result property="empMail" column="EMP_MAIL" />
		<result property="enabled" column="ENABLED" />
		
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	
	<resultMap type="kr.or.ddit.login.vo.UserAuth" id="authMap">
		<result property="username" column="USERNAME" />
		<result property="auth" column="AUTH" />
	</resultMap>
	
	<!-- 로그인 정보 -->
	<select id="read" parameterType="String" resultMap="userAuthMap">
		 SELECT E.EMP_CD USERNAME,E.SEC_CD,S.SEC_NM,S.DEPT_NM,E.EMP_NM,E.EMP_PRNO,E.EMP_SEX,
			   E.EMP_ADDR,E.EMP_HP,E.POSITION,E.LCNS_NO,E.EMP_PIC,
			   E.STATE_CD,C.CD_NM,E.HIRE_DATE,E.LEAVE_YN,E.ENABLED,E.EMP_MAIL,
			   E.EMP_PW PASSWORD,A.AUTH
		  FROM EMP E LEFT OUTER JOIN AUTH A
		       ON(E.EMP_CD=A.USERNAME)
               LEFT OUTER JOIN SEC S
               ON(E.SEC_CD=S.SEC_CD)
               LEFT OUTER JOIN CM_CD C
               ON(E.STATE_CD=C.CM_CD)
		 WHERE E.EMP_CD=#{username}
	</select>
	
	<!-- 최초 로그인 확인 -->
	<select id="firstLogin" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM EMP
		 WHERE EMP_CD=#{username}
<!-- 		   AND EMP_PW=#{password} -->
		   AND STATE_CD='ES0'
	</select>
	
	<!-- 최초 로그인 확인 -->
	<select id="checkMatch" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM EMP
		 WHERE EMP_CD=#{username}
		   AND EMP_PW=#{password}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPw" parameterType="map" resultType="int">
		SELECT COUNT(*)
		  FROM EMP
		 WHERE EMP_CD=#{empCd}
		   AND EMP_MAIL=#{email}
	</select>
	
	<!-- 최초 로그인시 직원 정보 등록 및 상태 변경 -->
	<update id="infoReg" parameterType="map">
		UPDATE EMP
		   SET EMP_NM=#{empNm}
		   	  ,EMP_PRNO=#{empPrno}
			  ,EMP_HP=#{empHp}
			  ,EMP_PW=#{empPw}
			  ,EMP_MAIL=#{empMail}
			  ,EMP_ADDR=#{empAddr}
			  ,STATE_CD='ES6'
		 WHERE EMP_CD=#{empCd}
	</update>
	
	<!-- 최초 로그인시 auth 추가 -->
	<insert id="addAuth" parameterType="string">
		INSERT INTO AUTH 
		VALUES(#{empCd},(SELECT 'ROLE_'||(CASE SEC_CD WHEN 'SEC00001' THEN 'DOCTOR'
		                                              WHEN 'SEC00002' THEN 'DOCTOR'
		                                              WHEN 'SEC00003' THEN 'DOCTOR'
		                                              WHEN 'SEC00004' THEN 'DOCTOR'
		                                              WHEN 'SEC00005' THEN 'NURSE'
		                                              WHEN 'SEC00006' THEN 'NURSE'
		                                              WHEN 'SEC00007' THEN 'NURSE'
		                                              WHEN 'SEC00008' THEN 'ENGI'
		                                              WHEN 'SEC00009' THEN 'WONMU'
		                                              WHEN 'SEC00010' THEN 'DRUG'
		                                              END)
		                   FROM EMP
		                  WHERE EMP_CD=#{empCd}))
	</insert>
	
	<!-- 비밀번호 재설정 URL 발송시 uuid 설정 -->
	<update id="setPwUuid" parameterType="map">
		UPDATE EMP
		   SET PW_UUID=#{pwUuid}
		 WHERE EMP_CD=#{empCd}  
	</update>
	
	<!-- 비밀번호 재설정시 uuid 확인 -->
	<select id="getPwUuid" parameterType="string" resultType="string">
		SELECT PW_UUID
		  FROM EMP
		 WHERE EMP_CD=#{empCd} 
	</select>
	
	<!-- 로그인 시 직원 상태 변경 -->
	<update id="online" parameterType="string">
		UPDATE EMP
		   SET STATE_CD='ES1'
		 WHERE EMP_CD=#{empCd}  
	</update>
	
	<!-- 로그아웃 시 직원 상태 변경 -->
	<update id="offline" parameterType="string">
		UPDATE EMP
		   SET STATE_CD='ES6'
		 WHERE EMP_CD=#{empCd}  
	</update>
</mapper>