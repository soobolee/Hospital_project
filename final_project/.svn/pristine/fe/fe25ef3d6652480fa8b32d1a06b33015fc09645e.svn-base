<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
	<mapper namespace="kr.or.ddit.ent.mapper.EntMapper">
	
	<resultMap type="kr.or.ddit.ent.vo.WardVO" id="wardVOMap">
		<result property="wardCls" column="WARD_CLS" />
		<collection property="roomVO" resultMap="roomVOMap">			
		</collection>
	</resultMap>
	
	<resultMap type="kr.or.ddit.ent.vo.RoomVO" id="roomVOMap">
		<result property="roomCls" column="ROOM_CLS"/>
		<result property="bed" column="BED"/>
		<result property="pntCd" column="PNT_CD"/>
		<result property="pntNm" column="PNT_NM"/>
		<result property="entDt" column="ENT_DT"/>
		<result property="levDt" column="LEV_DT"/>
	</resultMap>
	
	<!-- 입원 대기 중인 환자 리스트 출력 쿼리 -->
	<select id="entPatientList" resultType="entVO" parameterType="String">	  
		  SELECT PNT_CD, PNT_NM, PNT_PRNO, PNT_SEX, PNT_ADDR, PNT_HP, CHR_DR, HEIGHT, WEIGHT, SMK_YN, DRK_YN, PRGNT_YN, STATE_CD, PRTCR_NM, PRTCR_TEL, PNT_REG_DT, DEL_YN, ENABLED 
  			FROM PATIENT P
 		   WHERE STATE_CD = 'PS5'
		  <if test="keyword != null and keyword != ''">
		    AND PNT_NM LIKE '%'||#{keyword}||'%'
		  </if>
 		ORDER BY PNT_REG_DT DESC
	</select>
	
	
	<select id="entPatientCount" resultType="int">
 		 SELECT COUNT(PNT_NM) 
		   FROM PATIENT P
		  WHERE STATE_CD = 'PS5'
	</select>
	
	
	<!-- 입원 중인 환자 리스트 출력 쿼리 입원대기 코드 ps6 -->
	<select id="entWardPntList" resultType="entVO" parameterType="String">
      SELECT T.TREAT_CD, T.RCPT_NO, T.EMP_CD, T.TREAT_OP, T.TREAT_DT,
             P.ENT_CD, P.DIET_CD, P.LEV_DT, P.ENT_DT, P.PNT_CD, P.PNT_NM, P.PNT_PRNO, P.PNT_SEX, P.PNT_ADDR, P.PNT_HP, P.CHR_DR, P.HEIGHT, P.WEIGHT,
             P.SMK_YN, P.DRK_YN, P.PRGNT_YN, P.STATE_CD, P.PRTCR_NM, P.PRTCR_TEL, P.PNT_REG_DT, 
             P.BED_NO, P.ROOM_AMT, P.WARD_CLS, P.ROOM_CLS, P.BED
        FROM TREAT T RIGHT OUTER JOIN (SELECT E.ENT_CD, E.DIET_CD, E.LEV_DT, E.ENT_DT, P.PNT_CD, P.PNT_NM, P.PNT_PRNO, P.PNT_SEX, P.PNT_ADDR, P.PNT_HP, P.CHR_DR, P.HEIGHT, P.WEIGHT,
                                              P.SMK_YN, P.DRK_YN, P.PRGNT_YN, P.STATE_CD, P.PRTCR_NM, P.PRTCR_TEL, P.PNT_REG_DT, 
                                              B.BED_NO,
                                              B.ROOM_AMT,
                                              B.WARD_CLS, B.ROOM_CLS, B.BED
                                         FROM ENT E, PATIENT P, BED B
                                        WHERE E.LEV_DT >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
                                          AND E.PNT_CD = P.PNT_CD
                                          AND E.BED_NO = B.BED_NO
                                          AND P.STATE_CD = 'PS6'
                                          <if test="keyword != null and keyword != ''">
                                          AND P.PNT_NM LIKE '%'||#{keyword}||'%'
                                          </if>
                                       ) P
          ON (T.PNT_CD = P.PNT_CD)
	</select>
	
	<!-- 입원 환자 명수 가져오기 -->
	<select id="entWardPntCount" resultType="int">
      SELECT  COUNT(PNT_NM)
        FROM TREAT T RIGHT OUTER JOIN (SELECT E.ENT_CD, E.DIET_CD, E.LEV_DT, E.ENT_DT, P.PNT_CD, P.PNT_NM, P.PNT_PRNO, P.PNT_SEX, P.PNT_ADDR, P.PNT_HP, P.CHR_DR, P.HEIGHT, P.WEIGHT,
                                              P.SMK_YN, P.DRK_YN, P.PRGNT_YN, P.STATE_CD, P.PRTCR_NM, P.PRTCR_TEL, P.PNT_REG_DT, 
                                              B.BED_NO,
                                              B.ROOM_AMT,
                                              B.WARD_CLS, B.ROOM_CLS, B.BED
                                         FROM ENT E, PATIENT P, BED B
                                        WHERE E.LEV_DT >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
                                          AND E.PNT_CD = P.PNT_CD
                                          AND E.BED_NO = B.BED_NO
                                          AND P.STATE_CD = 'PS6'
                                       ) P
          ON (T.PNT_CD = P.PNT_CD)
	</select>
	
	<!-- 환자의 상세 정보를 가져오는 쿼리 -->
	<select id="patientDetail" resultType="entVO" parameterType="String">
		SELECT PNT_CD, PNT_NM, PNT_PRNO, PNT_SEX, PNT_ADDR, PNT_HP, CHR_DR, HEIGHT, WEIGHT, SMK_YN, DRK_YN, PRGNT_YN, STATE_CD, PRTCR_NM, PRTCR_TEL, PNT_REG_DT, DEL_YN, ENABLED 
		  FROM PATIENT
		  WHERE PNT_CD = #{pntCd}
	</select>
	
	<!-- 일반 환자를 입원 대기 중 상태로 변경 -->
	<update id="updatePntWaitEnt" parameterType="String">
		UPDATE PATIENT SET STATE_CD = 'PS5' WHERE PNT_CD = #{pntCd}
	</update>
	
	<!-- 클릭한 병동호실에 대한 정보와 묵고 있는 사람이 있는지 없는지 가져오는 쿼리 -->
	<select id="getRoom" resultType="entVO" parameterType="String">
	  SELECT B.BED_NO, B.WARD_CLS, B.ROOM_CLS, B.ROOM_AMT, B.BED, B.BED_ORDER
			,E.ENT_CD, E.BED_NO, E.DIET_CD, E.PNT_CD, (SELECT PNT_NM FROM PATIENT P WHERE P.PNT_CD = E.PNT_CD) AS pntNm
		    ,E.ENT_AMT, E.ENT_DT, E.LEV_DT
		FROM BED B LEFT OUTER JOIN ENT E
		  ON (B.BED_NO = E.BED_NO)
	    WHERE ROOM_CLS = #{roomCls}
		ORDER BY 1
	</select>
		
	<!-- 병동에 조직도를 위한 정보 가져오기 -->
	<select id="getWard" resultMap="wardVOMap">
		select distinct WARD_CLS, ROOM_CLS from bed
		order by WARD_CLS asc , ROOM_CLS asc
	</select>
	
	<!-- 침상의 위치값을 넣는 쿼리 -->
	<update id="saveRoom" parameterType="hashMap">
		UPDATE BED SET BED_ORDER = #{bedOrder} WHERE BED_NO = #{bedNo}
	</update>
	
	<!-- 입원할 환자의 상태코드를 PS6 으로 변경 -->
	<update id="updateEnt" parameterType="String">
		UPDATE PATIENT SET STATE_CD = 'PS6' WHERE STATE_CD = 'PS5' AND PNT_CD = #{pntCd}
	</update>
	
	<!-- 입원한 환자를 ENT 테이블에 추가  -->	
	<insert id="insertEnt" parameterType="hashMap">
		INSERT INTO ENT(ENT_CD, TREAT_CD, PNT_CD, BED_NO, DIET_CD, ENT_AMT, ENT_DT, LEV_DT)
		     VALUES (('ENT'||LPAD((SELECT NVL(MAX(SUBSTR(ENT_CD,4,5)), 0) + 1 FROM ENT),5,0))
		            ,(SELECT TREAT_CD FROM TREAT WHERE PNT_CD = #{pntCd})
		            ,#{pntCd}
		            ,#{bedNo}
		            ,#{dietCd}
		            ,((SELECT ROOM_AMT * (TO_DATE(#{levDt}) - TO_DATE(SYSDATE)) FROM BED WHERE BED_NO = #{bedNo}) + (SELECT DIET_AMT * (TO_DATE(#{levDt}) - TO_DATE(SYSDATE)) FROM DIET WHERE DIET_CD = #{dietCd}))
		            ,TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		            ,TO_CHAR(TO_DATE(#{levDt}), 'YYYY-MM-DD')
		      )
	</insert>
	
	<!-- 입원한 환자의 입원 여부를 Y로 1 로 바꾸는 작업 -->
	<update id="updatePntToEnt">
		UPDATE PATIENT SET ENT_YN = 1 WHERE PNT_CD = #{pntCd} AND ENT_YN = 0
	</update>
	
	<!-- 입원환자의 상세정보를 가져오는 코드  -->
	<select id="getEntDetail" parameterType="String" resultType="entVO">
    SELECT ENT_CD, DIET_CD, E.PNT_CD, ENT_AMT, ENT_DT, LEV_DT,
           PNT_NM, PNT_PRNO, PNT_SEX, PNT_ADDR, PNT_HP, CHR_DR, HEIGHT, WEIGHT, SMK_YN, DRK_YN, PRGNT_YN, STATE_CD, PRTCR_NM, PRTCR_TEL, PNT_REG_DT, DEL_YN, ENABLED
           BED_NO, WARD_CLS, ROOM_CLS, ROOM_AMT, BED, BED_ORDER
      FROM ENT E, PATIENT P, BED B
     WHERE E.PNT_CD = #{pntCd}
       AND E.PNT_CD = P.PNT_CD
       AND E.BED_NO = B.BED_NO
	</select>

	<!-- 환자의 입원간호일지를 가져오는 쿼리 -->
	<select id="getCareNote" parameterType="String" resultType="entVO">
	  	SELECT C.NOTE_NO, C.ENT_CD, C.EMP_CD, C.NOTE_CONTENT, C.NOTE_WRT_DT
		      ,E.EMP_NM
		      ,T.PNT_CD
		      ,P.PNT_NM
		  FROM ENT T, CARE_NOTE C, PATIENT P, EMP E
		 WHERE C.ENT_CD = #{entCd}
		   AND E.EMP_CD = C.EMP_CD
		   AND T.ENT_CD = C.ENT_CD
		   AND P.PNT_CD = T.PNT_CD
	  ORDER BY NOTE_WRT_DT DESC
	</select>
	
	<!-- 바이탈사인 정보 가져오기 -->
	<select id="getVital" parameterType="String" resultType="entVO">
        SELECT PNT_CD, VS_DT, VS_BP_MAX, VS_TMP, VS_BS, VS_BP_MIN 
          FROM VS
         WHERE PNT_CD = #{pntCd}
      ORDER BY VS_DT DESC
	</select>
	
	<!-- 바이탈사인 정보 넣기 -->
	<insert id="insertVital" parameterType="hashMap">
		INSERT INTO VS 
           	   VALUES(#{pntCd}, TO_CHAR(SYSDATE, 'YYYY-MM-DD:HH24MISS'), #{vsBpMax}, #{vsBpMin}, #{vsTmp}, #{vsBs})
	</insert>
	
	<!-- 입원환자 간호일지를 정보 넣기 -->
	<insert id="insertCareNote" parameterType="hashMap">
		INSERT INTO CARE_NOTE VALUES((SELECT NVL(MAX(NOTE_NO), 0) + 1 FROM CARE_NOTE), #{entCd}, #{empCd}, #{noteContent}, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))
	</insert>
	
	<!-- 병동 근무 직원 가져오기 -->
	<select id="getEntWorker" parameterType="hashMap" resultType="entVO">
      SELECT T.EMP_CD, T.SEC_CD, T.EMP_NM, T.EMP_PRNO, T.EMP_SEX, T.EMP_ADDR, T.EMP_HP, T.POSITION, T.LCNS_NO, T.EMP_PIC, T.STATE_CD, T.HIRE_DATE, T.LEAVE_YN, T.ENABLED, T.EMP_MAIL, T.EMP_PW
              ,T.DEPT_NM, T.SEC_NM
        FROM (SELECT ROW_NUMBER() OVER(ORDER BY EMP_CD) RNUM, EMP_CD, E.SEC_CD, EMP_NM, EMP_PRNO, EMP_SEX, EMP_ADDR, EMP_HP, POSITION, LCNS_NO, EMP_PIC, STATE_CD, HIRE_DATE, LEAVE_YN, ENABLED, EMP_MAIL, EMP_PW
                    ,DEPT_NM, SEC_NM
          	    FROM EMP E, SEC S
         	   WHERE E.SEC_CD = 'SEC00007'
           	     AND E.SEC_CD = S.SEC_CD
			    <if test="keyword != null and keyword != ''">
			    	AND E.EMP_NM LIKE '%'||#{keyword}||'%'
			    </if>
           	  ) T 
          WHERE T.RNUM BETWEEN #{start} AND #{end}
	</select>
	
	
	<!-- 병동 근무 직원 갯수 세기 페이징을 위함-->
	<select id="getEntWorkerCount" resultType="int" parameterType="String">
		SELECT COUNT(EMP_CD) FROM EMP 
		WHERE SEC_CD = 'SEC00007'
		--<if test="keyword != null and keyword != ''">
			AND EMP_NM LIKE '%'||#{keyword}||'%'
		--</if>
	</select>
	
	<!-- 병동 근무 직원 세기 -->
	<select id="getNoPagingWorkerCount" resultType="int">
	   SELECT COUNT(EMP_CD) 
         FROM EMP 
		WHERE SEC_CD = 'SEC00007'
	</select>
	
	<!-- 병동 근무 직원 디테일 정보 가져오기 -->
	<select id="getEntEmpDetail" resultType="entVO" parameterType="String">
		SELECT EMP_CD, SEC_CD, EMP_NM, EMP_PRNO, EMP_SEX, EMP_ADDR, EMP_HP, POSITION, LCNS_NO, EMP_PIC, STATE_CD, HIRE_DATE, LEAVE_YN, ENABLED, EMP_MAIL, EMP_PW
		  FROM EMP
		 WHERE EMP_CD = #{empCd}
	</select>
	
	<!-- 다이어트 목록 가져오기 -->
	<select id="getDietList" resultType="entVO">
		SELECT DIET_CD, DIET_NM, DIET_AMT FROM DIET
	</select>
	

</mapper>