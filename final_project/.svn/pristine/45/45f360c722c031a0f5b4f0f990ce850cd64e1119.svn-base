<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.or.ddit.medical.mapper.MedicalMapper">
	 <resultMap type="medicalVO" id="detailMap">
	 	<id property="pntCd" column="PNT_CD"/>
	 	<result property="pntNm" column="PNT_NM"/>
	 	<result property="sex" column="SEX"/>
	 	<result property="pntPrno" column="PNT_PRNO"/>
	 	<result property="age" column="AGE"/>
	 	<result property="addr" column="ADDR"/>
	 	<result property="pntHp" column="PNT_HP"/>
	 	<result property="symptoms" column="SYMPTOMS"/>
	 	<result property="rsvtNo" column="RSVT_NO"/>
	 	<collection property="cmnt" resultMap="cmntMap"></collection>
	 </resultMap>
	 
	 <resultMap type="kr.or.ddit.medical.vo.CmntVO" id="cmntMap">
	 	<result property="cmntNo" column="CMNT_NO"/>
	 	<result property="pntCd" column="PNT_CD"/>
	 	<result property="empCd" column="EMP_CD"/>
	 	<result property="empNm" column="EMP_NM"/>
	 	<result property="cmntCont" column="CMNT_CONT"/>
	 	<result property="cmntDt" column="CMNT_DT"/>
	 	<result property="cmntDate" column="cmntDate"/>
	 	<result property="cmntTime" column="cmntTime"/>
	 	<result property="cmntFixYn" column="CMNT_FIX_YN"/>
	 </resultMap>
	
	 <!-- 진료 예약 목록 -->
	 <select id="selectListMedicalYeyak" parameterType="hashMap" resultType="medicalVo">
	 	/* kr.or.ddit.medical.vo.MedicalMapper.selectListMedicalYeyak */
		SELECT PNT.PNT_NM AS pntNm
		     , SUBSTR(PNT.PNT_PRNO, 1, 6) AS PNT_PRNO
		     , TO_DATE(SUBSTR(RSV.RSVT_DT, 1, 8)) AS RSVT_REG_DT
		     , SUBSTR(RSV.RSVT_DT, 9, 2) || ':' || SUBSTR(RSV.RSVT_DT, 11, 2) AS RSVT_REG_TIME
		     , PNT.STATE_CD AS STATE_CD
		     , RSV.RSVT_NO AS RSVT_NO
		     , PNT.PNT_CD AS PNT_CD
		FROM PATIENT PNT, RESERVATION RSV
		<where>
			AND PNT.PNT_CD = RSV.PNT_CD	/* 환자 예약(환자코드) */
			AND RSV.EMP_CD = #{empCd}
<!-- 			AND SUBSTR(RSV.RSVT_DT, 1, 8) = TO_CHAR(SYSDATE,'YYYYMMDD') /* 오늘날짜  */ -->
			AND RSV.RSVT_NO NOT IN(SELECT RSVT_NO FROM RECEPT WHERE RSVT_NO IS NOT NULL) /* 접수하면 안보이게 */
			ORDER BY RSV.RSVT_DT		/* 예약시각 순으로 정렬 */
		</where>
	</select>

	<!-- 진료 대기 목록 -->
	<select id="selectListMedicalDaegi" parameterType="hashMap" resultType="medicalVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectListMedicalDaegi */
		SELECT PNT.PNT_NM AS PNT_NM
		     , PNT.PNT_CD AS PNT_CD
		     , SUBSTR(PNT.PNT_PRNO, 1, 6) AS PNT_PRNO
		     , RSV.RSVT_REG_DT AS RSVT_REG_DT
		     , TO_DATE(SUBSTR(RCT.RCPT_DT, 1, 8)) AS RSVT_REG_DT
		     , CASE PNT.STATE_CD WHEN 'PS4' THEN ' 우선대기 '
		       ELSE SUBSTR(RCT.RCPT_DT, 9, 2) || ':' || SUBSTR(RCT.RCPT_DT, 11, 2)
		       END AS RSVT_REG_TIME
		     , PNT.STATE_CD AS STATE_CD
		     , RSV.RSVT_NO AS RSVT_NO
		     , CASE PNT.STATE_CD WHEN 'PS4' THEN 1
		       ELSE 2
		       END AS FIRST
			 , RCT.RCPT_NO AS RCPT_NO /* 접수번호 */
		FROM PATIENT PNT, RESERVATION RSV, RECEPT RCT
		<where>
		AND PNT.PNT_CD = RSV.PNT_CD /* 환자 예약(환자코드) */
		AND RSV.RSVT_NO = RCT.RSVT_NO /* 예약 접수(예약번호) */
		AND RSV.EMP_CD = #{empCd}
<!-- 		AND SUBSTR(RCT.RCPT_DT, 1, 8) = TO_CHAR(SYSDATE,'YYYYMMDD') /* 오늘날짜  */ -->
		AND RCT.RCPT_NO NOT IN (SELECT RCPT_NO
		                          FROM TREAT T, RCV R
		                         WHERE T.TREAT_CD = R.TREAT_CD) /* 수납 안 한거 */
		ORDER BY FIRST, RCT.RCPT_DT /* 우선대기, 접수시각 순으로 정렬 */
		</where>
	</select>
	
	<!-- 진료 상세 조회 -->
	<select id="selectDetailMedical" parameterType="medicalVo" resultMap="detailMap">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectDetailMedical */
		SELECT  PNT.PNT_NM AS PNT_NM
	  , CASE WHEN SUBSTR(PNT.PNT_PRNO, 8, 1) IN('1', '3') THEN '남'
	    ELSE '여'
	    END AS SEX
	  , SUBSTR(PNT.PNT_PRNO, 1, 6) AS PNT_PRNO
	  , CASE WHEN SUBSTR(PNT_PRNO, 8, 1) IN('1', '2') THEN EXTRACT(YEAR FROM SYSDATE) - (1900 + SUBSTR(PNT_PRNO, 1, 2)) +1
        ELSE EXTRACT(YEAR FROM SYSDATE) - (2000 + SUBSTR(PNT_PRNO, 1, 2)) +1
		END AS AGE
	  , PNT.PNT_ADDR AS ADDR
	  , PNT.PNT_HP AS PNT_HP
	  , RSV.SYMPTOMS AS SYMPTOMS
	  , RSV.RSVT_NO
	  , PNT.PNT_CD
      , CMT.CMNT_NO
      , CMT.EMP_CD
      , CMT.EMP_NM
      , CMT.CMNT_CONT
      , CMT.CMNT_DT
      , CMT.cmntDate
      , CMT.cmntTime
      , CMT.CMNT_FIX_YN
  FROM  PATIENT PNT, RESERVATION RSV,
       (SELECT C.CMNT_NO
             , C.EMP_CD
             , C.PNT_CD
             , C.CMNT_CONT
             , C.CMNT_DT
             , TO_CHAR(TO_DATE(C.CMNT_DT, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') AS cmntDate
             , TO_CHAR(TO_DATE(C.CMNT_DT, 'YYYYMMDDHH24MISS'), 'HH24:MI:SS') AS cmntTime
             , C.CMNT_FIX_YN
             , E.EMP_NM
          FROM CMNT C, EMP E
         WHERE C.EMP_CD = E.EMP_CD
         ORDER BY CMNT_DT) CMT
		<where>
		AND PNT.PNT_CD = RSV.PNT_CD /* 환자예약(환자코드) */
		AND RSV.PNT_CD = CMT.PNT_CD(+)
		AND RSV.RSVT_NO = #{rsvtNo} /* 예약번호 */
		</where>
	</select>
	
	<!--코멘트 저장  -->
	<insert id="insertCmnt" parameterType="kr.or.ddit.medical.vo.CmntVO">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertCmnt */
		INSERT INTO CMNT(
			CMNT_NO
		  , PNT_CD
		  , EMP_CD
		  , CMNT_CONT
		  , CMNT_DT
		  , CMNT_FIX_YN
		) VALUES (
			(SELECT NVL(MAX(CMNT_NO), 0) +1 FROM CMNT)
		   , #{pntCd}
		   , #{empCd}
		   , #{cmntCont}
		   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		   , 0
		)
	</insert>
	
	<!-- 증상 수정  -->
	<update id="updateSymptoms" parameterType="medicalVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.updateSymptoms */
		UPDATE RESERVATION
		SET SYMPTOMS = #{symptoms}
		WHERE RSVT_NO = #{rsvtNo}
	</update>
	
	<!-- 코멘트 수정  -->
	<update id="updateCmnt" parameterType="kr.or.ddit.medical.vo.CmntVO">
		/* kr.or.ddit.medical.vo.MedicalMapper.updateCmnt */
		UPDATE CMNT
		SET CMNT_CONT = #{cmntCont}
		WHERE CMNT_NO = #{cmntNo}
	</update>
	
	<!-- 코멘트 삭제  -->
	<delete id="deleteCmnt" parameterType="kr.or.ddit.medical.vo.CmntVO">
	 	/* kr.or.ddit.medical.vo.MedicalMapper.deleteCmnt */
		DELETE FROM CMNT
		WHERE CMNT_NO = #{cmntNo}
	</delete>

	<!-- 사진 저장  -->
	<insert id="insertCam" parameterType="medicalVo">
		INSERT INTO CHART_FILE(
			FILE_NO
		  , BASE64IMG
		  , FILE_CLS
		  , FILE_NM
		  , FILE_REG_DT
		  , EMP_CD
		  , RCPT_NO
		) VALUES (
			(SELECT NVL(MAX(FILE_NO), 0) +1 FROM CHART_FILE)
		  , #{base64img}
		  , '환자사진'
		  , '환자사진_'||(SELECT NVL(MAX(FILE_NO), 0) +1 FROM CHART_FILE)
		  , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		  , #{empCd}
		  , #{rcptNo}
		)
	</insert>
	
	<select id="selectListCam" resultType="medicalVo" parameterType="hashMap">
		SELECT FILE_NO
		     , FILE_NM
		     , BASE64IMG 
		FROM CHART_FILE
		WHERE FILE_CLS = '환자사진'
		AND BASE64IMG IS NOT NULL
		ORDER BY FILE_NO DESC
	</select>

	<!-- 진단 및 초방 검색 -->
	<select id="selectListJindanSch" resultType="medicalSchVo" parameterType="hashMap">
	/* kr.or.ddit.medical.vo.MedicalMapper.selectListJindanSch 진단 및 처방 검색(질병코드, 병명 / 퀵오더 / 처방) */
		<if test='type == "1"'>
		SELECT DIS_CD
		     , DIS_NM
		FROM DIS
		WHERE DIS_NM LIKE '%' || #{schTxt} || '%'
		</if>
		
		<if test='type == "2"'>
		SELECT DISTINCT QO_CD
		              , QO_NM
		FROM QUICK_ORDER
		WHERE QO_NM LIKE '%' || #{schTxt} || '%'
		</if>
		
		<if test='type == "3"'>
		SELECT DR.DRUG_CD AS DRUG_CD
		     , DR.DRUG_NM AS DRUG_NM
		FROM DRUG DR, CM_CD CM
		<where>
		AND TO_CHAR(DR.CLS_CD) = CM.CM_CD
		AND
		(
			DR.DRUG_NM LIKE '%' || #{schTxt} || '%'
			OR CM.CD_NM LIKE '%' || #{schTxt} || '%'
		)
		</where>
		</if>
	</select>
	
	<!-- 수가코드 검색 -->
	<select id="selectListSoogiSch" resultType="medicalSchVo" parameterType="hashMap">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectListSoogiSch 검사명으로 검색(수가코드, 검사명, 비용) */
		SELECT SG_CD /* 수가코드 */
		     , SG_NM /* 수가명칭 */
		     , TO_CHAR(SG_AMT, 'fm999,999,999,999') AS SG_AMT /* 수가금액 vo에서 int형을 못 받아서 문자형으로 변경 */
		FROM SG_CD
		<where>
		AND J_CLS IN('02', '03') /* 장구분 검사 촬영 */
		AND SG_NM LIKE '%' || #{schTxt} || '%' /* 검색어 */
		</where>
	</select>
	
<!--
	나이, 성별, 신장, 체중은 DB에서 값 가져오고 혈당, 체온, 혈압만 입력
	혈압은 최대/최소의 형태이고 측정 완료시 해당 값이 저장되고 축정완료 -> 다시측정으로 버튼 변경
	다시측정시 처음으로 돌아가게 만든다.
-->

	<!-- 바이탈사인 저장  -->
	<insert id="insertVitalSign" parameterType="medicalVitalSignVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertVitalSign 바이탈사인 입력하기(혈당, 체온, 혈압) */
		INSERT INTO VS(
			PNT_CD
		  , VS_DT
		  , VS_BP_MAX
		  , VS_BP_MIN
		  , VS_TMP
		  , VS_BS
		) VALUES (
			#{pntCd} /* 환자코드 */
		  , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') /* 측정일시 */
		  , #{vsBpMax} /* 최대혈압 */
		  , #{vsBpMin} /* 최소혈압 */
		  , #{vsTmp} /* 체온 */
		  , #{vsBs} /* 혈당 */
		)
	</insert>
	
	<!-- 해당 환자의 모든 바이탈사인 기록 조회 -->
	<select id="selectListVitalSignRecord" resultType="medicalVitalSignVo" parameterType="hashMap">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectListVitalSignRecord 해당 환자의 모든 바이탈사인 기록 조회 */
		SELECT CASE WHEN SUBSTR(P.PNT_PRNO, 8, 1) IN('1', '2') THEN EXTRACT(YEAR FROM SYSDATE) - (1900 + SUBSTR(P.PNT_PRNO, 1, 2)) +1
		       ELSE EXTRACT(YEAR FROM SYSDATE) - (2000 + SUBSTR(P.PNT_PRNO, 1, 2)) +1
		       END AS AGE /* 나이 */
		     , CASE WHEN SUBSTR(P.PNT_PRNO, 8, 1) IN('1', '3') THEN '남' ELSE '여' END AS SEX /* 성별 */
		     , P.HEIGHT AS HEIGHT /* 신장 */
		     , P.WEIGHT AS WEIGHT /* 체중 */
		     , V.VS_BS AS VS_BS /* 혈당 */
		     , V.VS_TMP AS VS_TMP /* 체온 */
		     , V.VS_BP_MAX AS VS_BP_MAX /* 최대혈압 */
		     , V.VS_BP_MIN AS VS_BP_MIN /* 최소혈압 */
		     , TO_CHAR(TO_DATE(V.VS_DT,'YYYYMMDDHH24MISS'), 'YYYY/MM/DD') AS VS_DT /* 측정일시 */
		     , V.PNT_CD AS PNT_CD /* 환자번호 */
		FROM PATIENT P, VS V
		<where>
		AND P.PNT_CD = V.PNT_CD /* 환자 바이탈사인(환자코드) */
		AND P.PNT_CD = #{pntCd}
		</where>
	</select>

	<!-- 환자정보, 가장 최근 바이탈사인 받아오기(나이, 성별, 신장, 체중, 혈당, 체온, 혈압,증상) -->
	<select id="selectVitalSignDetail" resultType="medicalVitalSignVo" parameterType="hashMap">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectVitalSignDetail 환자정보, 가장 최근 바이탈사인 받아오기(나이, 성별, 신장, 체중, 혈당, 체온, 혈압) */
		SELECT TA.T1 AS AGE
		     , TA.T2 AS SEX
		     , TA.T3 AS HEIGHT
		     , TA.T4 AS WEIGHT
		     , TA.T5 AS VS_BS
		     , TA.T6 AS VS_TMP
		     , TA.T7 AS VS_BP_MAX
		     , TA.T8 AS VS_BP_MIN
		     , DT AS VS_DT
		     , TA.T9 AS PNT_CD
		     , (SELECT SYMPTOMS FROM RESERVATION RSV WHERE RSV.RSVT_NO = #{rsvtNo} AND RSV.PNT_CD = TA.T9) AS SYMPTOMS /*증상*/
		FROM (SELECT CASE WHEN SUBSTR(P.PNT_PRNO, 8, 1) IN('1', '2') THEN EXTRACT(YEAR FROM SYSDATE) - (1900 + SUBSTR(P.PNT_PRNO, 1, 2)) +1
		             ELSE EXTRACT(YEAR FROM SYSDATE) - (2000 + SUBSTR(P.PNT_PRNO, 1, 2)) +1
		             END AS T1 /* 나이 */
		           , CASE WHEN SUBSTR(P.PNT_PRNO, 8, 1) IN('1', '3') THEN '남' ELSE '여' END AS T2 /* 성별 */
		           , P.HEIGHT AS T3 /* 신장 */
		           , P.WEIGHT AS T4 /* 체중 */
		           , V.VS_BS AS T5 /* 혈당 */
		           , V.VS_TMP AS T6 /* 체온 */
		           , V.VS_BP_MAX AS T7 /* 최대혈압 */
		           , V.VS_BP_MIN AS T8 /* 최저혈압 */
		           , V.VS_DT AS DT /* 측정일시 */
		           , P.PNT_CD AS T9 /* 환자번호 */
		      FROM PATIENT P, VS V
		      <where>
		      AND P.PNT_CD = V.PNT_CD /* 환자 바이탈사인(환자코드) */
		      AND P.PNT_CD = #{pntCd}
		      ORDER BY V.VS_DT DESC) TA /* 최근순으로 정렬 */
		      </where>
		WHERE ROWNUM <![CDATA[<=]]> 1 /* 가장 최근 기록만 조회 */
	</select>
	
	<insert id="insertTreat" parameterType="medicalTreatVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertTreat 진료저장 */
		INSERT INTO TREAT(
			TREAT_CD
		  , RCPT_NO
		  , EMP_CD
		  , PNT_CD
		  , TREAT_OP
		  , TREAT_DT
		) VALUES (
			#{treatCd} /* 진료코드 */
		  , #{rcptNo} /* 접수번호 */
		  , #{empCd} /* 의사코드 */
		  , #{pntCd} /* 환자코드 */
		  , #{treatOp} /* 진로소견 */
		  , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') /* 진료일시 */
		)
	</insert>
	
	<select id="selectLastTreatCd" resultType="string">
		SELECT 'TRT'||LPAD( NVL(MAX( SUBSTR(TREAT_CD, 4, 5) ), 0) + 1,5,0) AS treatCd
		FROM TREAT
	</select>
	
	<insert id="insertPrescription" parameterType="medicalTreatVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertPrescription 처방저장 */
		INSERT INTO PRESCRIPTION(
			PRSP_CD
		  , TREAT_CD
		  , DRUG_CD
		  , DRUG_TIMES
		  , DRUG_DOES
		  , PRSP_TERM
		  , PRSP_DRUG_AMT
		  , PRSP_DT					
		) VALUES (
		  (SELECT 'PRS'||LPAD( NVL(MAX( SUBSTR(PRSP_CD, 4, 5) ), 0) + 1,5,0) FROM PRESCRIPTION)	 /* 처방코드 */
		  , #{treatCd} /* 진료코드 */
		  , #{drugCd} /* 의약품코드 */
		  , #{drugTimes} /* 일일복용횟수 */
		  , #{drugDoes} /* 일회복용량 */
		  , #{prspTerm} /* 처방기간 */
		  , #{prspDrugAmt} /* 처방약금액 */
		  , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') /* 진료일시 */
		)
	</insert>
	
	<insert id="insertDig" parameterType="medicalTreatVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertDig 질병저장 */
		INSERT INTO DIG(
			DIS_CD /* 질병코드 */
		  , DIS_NM /* 질병명 */
		  , DIG_CLS /* 소증우선순위 */
		  , TREAT_CD /* 진료코드 */
		) VALUES (
			#{disCd} /* 질병코드 */
		  , #{disNm} /* 질병명 */
		  , '1' /* 소증우선순위 */
		  , #{treatCd} /* 진료코드 */
		)
	</insert>
	
	<insert id="insertInspection" parameterType="medicalTreatVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.insertInspection 검사저장 */
		INSERT INTO INSPECTION(
			INSP_CD
		  , TREAT_CD
		  , SG_CD
		  , EMP_CD
		  , INSP_DT
		) VALUES (
		  (SELECT 'ISP'||LPAD( NVL(MAX( SUBSTR(INSP_CD, 4, 5) ), 0) + 1,5,0) FROM INSPECTION)	/* 검사코드 */
		  , #{treatCd} /* 진료코드 */
		  , #{sgCd} /* 검사종류코드(수가코드) */
		  , #{empCd} /* 직원코드 */
		  , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') /* 진료일시 */
		)
	</insert>
	
	<update id="updateChartFile" parameterType="medicalTreatVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.updateChartFile 차트파일 진료코드 업데이트 */
		UPDATE CHART_FILE
		SET
		TREAT_CD = #{treatCd}
		WHERE RCPT_NO = #{rcptNo}
	</update>
	
	<!-- 진료기록 상세조회 -->
	<select id="selectListTreatRecord" resultType="medicalRecordVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectListTreatRecord 진료기록 상세조회 */
		SELECT TBL_A.TREAT_DT AS TREAT_DT /* 진료일 */
			, TBL_A.PNT_ADDR AS PNT_ADDR /* 주소 */
		    , TBL_A.PNT_NM AS PNT_NM /* 이름 */
		    , TBL_A.PNT_PRNO  AS PNT_PRNO /* 주민번호 */
		    , TBL_A.HEIGHT  AS HEIGHT /* 키 */
		    , TBL_A.WEIGHT  AS WEIGHT /* 체중 */
		    , TBL_A.PNT_HP  AS PNT_HP /* 연락처 */
		    , TBL_A.SEX  AS SEX /* 성별 */
		    , TBL_A.AGE  AS AGE /* 나이 */
		    , TBL_A.EMP_NM  AS EMP_NM /* 담당의 */
		    , TBL_A.TREAT_OP  AS TREAT_OP /* 진료소견 */
		    , TBL_B.DRUG_NM AS DRUG_NM /* 약품명 */
		    , TBL_B.DRUG_DOES  AS DRUG_DOES /* 복용량 */
		    , TBL_B.DRUG_TIMES  AS DRUG_TIMES /* 복용횟수 */    
		    , TBL_B.PRSP_TERM  AS PRSP_TERM /* 처방기간 */
		  FROM (SELECT TRT.TREAT_DT AS TREAT_DT /* 진료일 */
		             , PNT.PNT_ADDR AS PNT_ADDR /* 주소 */
		          , PNT.PNT_NM AS PNT_NM /* 이름 */
		          , PNT.PNT_PRNO AS PNT_PRNO /* 주민번호 */
		          , PNT.HEIGHT AS HEIGHT /* 키 */
		          , PNT.WEIGHT AS WEIGHT /* 체중 */
		          , PNT.PNT_HP AS PNT_HP /* 연락처 */
		          , CASE WHEN SUBSTR(PNT.PNT_PRNO, 8, 1) IN('1', '3') THEN '남'
		            ELSE '여'
		            END AS SEX /* 성별 */
		          , CASE WHEN SUBSTR(PNT_PRNO, 8, 1) IN('1', '2') THEN EXTRACT(YEAR FROM SYSDATE) - (1900 + SUBSTR(PNT_PRNO, 1, 2)) +1
		            ELSE EXTRACT(YEAR FROM SYSDATE) - (2000 + SUBSTR(PNT_PRNO, 1, 2)) +1
		            END AS AGE /* 나이 */
		          , EMP.EMP_NM AS EMP_NM /* 담당의 */
		          , TRT.TREAT_OP AS TREAT_OP /* 진료소견 */
		          , PNT.PNT_CD AS A_PNT_CD /* A_환자코드 */
		        FROM PATIENT PNT /* 환자 */, TREAT TRT /* 진료 */, DOCTOR DOC /* 의사 */, EMP EMP /* 직원 */
		       WHERE 1 = 1
		         AND PNT.PNT_CD = TRT.PNT_CD /* 환자 - 진료(환자코드) */
		         AND PNT.PNT_CD = #{pntCd} /* 환자코드 */
		         AND TRT.TREAT_CD = #{treatCd} /* 진료코드 */
		         AND EMP.EMP_CD = DOC.EMP_CD /* 직원 - 의사(직원코드) */
		         AND DOC.EMP_CD = TRT.EMP_CD /* 의사 - 진료(직원코드) */) TBL_A
		    , (SELECT DRG.DRUG_NM AS DRUG_NM /* 약품명 */
		            , PRE.DRUG_TIMES AS DRUG_TIMES /* 복용횟수 */
		          , PRE.DRUG_DOES AS DRUG_DOES /* 복용량 */
		          , PRE.PRSP_TERM AS PRSP_TERM /* 처방기간 */
		          , PNT.PNT_CD AS B_PNT_CD /* B_환자코드 */
		        FROM PATIENT PNT /* 환자 */, TREAT TRT /* 진료 */, DRUG DRG /* 의약품 */, PRESCRIPTION PRE /* 처방전 */
		       WHERE 1 = 1
		         AND PNT.PNT_CD = TRT.PNT_CD /* 환자 - 투약(환자코드) */
		         AND PNT.PNT_CD = #{pntCd} /* 환자코드 */
		         AND TRT.TREAT_CD = PRE.TREAT_CD /* 진료 - 투약(진료코드) */
		         AND TRT.TREAT_CD = #{treatCd} /* 진료코드 */
		         AND DRG.DRUG_CD = PRE.DRUG_CD /* 의약품 - 투약(의약품코드) */) TBL_B
		 WHERE TBL_A.A_PNT_CD = TBL_B.B_PNT_CD
	</select>
	
	<!-- 해당 환자의 진료일 목록 -->
	<select id="selectListTreatDate" resultType="medicalRecordVo">
		/* kr.or.ddit.medical.vo.MedicalMapper.selectListTreatDate 환자의 진료리스트 조회(진료일) */	
		SELECT TREAT_CD
		, PNT_CD
		, TO_CHAR(TO_DATE(TREAT_DT,'YYYYMMDDHH24MISS'), 'YYYY/MM/DD') AS TREAT_DT	/* 진료일 */
		FROM TREAT
		WHERE PNT_CD = #{pntCd} /* 환자코드 */
		ORDER BY 1	/* 진료일순으로 정렬 */
	</select>

</mapper>