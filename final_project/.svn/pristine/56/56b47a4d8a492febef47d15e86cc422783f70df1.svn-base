package kr.or.ddit.security;

import java.util.Map;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.email.service.EmailService;
import kr.or.ddit.email.vo.EmailVO;
import kr.or.ddit.login.service.LoginService;

@Controller
public class CommonController {
	private static final Logger logger = 
			LoggerFactory.getLogger(CommonController.class);
	
	@Autowired
	LoginService loginService;
	
	@Inject
    EmailService emailService;
	
	//Authentication : 인증(로그인)
	//Authorization  : 인가(접근 제어)
	//리턴타입이 void ->  /accessError에 해당되는 /accessError.jsp를 forwarding해줌
	//접근 거부 처리자가 보낸 요청과 메소드를 매핑
	//<security:access-denied-handler error-page="/accessError" />
	@RequestMapping("/accessError")
	public void accessDenied(Authentication auth, Model model) {
		logger.info("access Denied : " + auth);
		
		model.addAttribute("msg", "Access Denied");
		
//		return "accessError";
	}
	
	@ResponseBody
	@GetMapping("/first")
	public boolean FirstLogin(@RequestParam Map<String, String> map) {
		int result = loginService.firstLogin(map);
		if(result > 0) {
			return true;
		}
		
		return false;
	}
	
	@ResponseBody
	@GetMapping("/findPw")
	public boolean findPw(@RequestParam Map<String, String> map) {
		EmailVO vo = new EmailVO();
		vo.setReceiveMail(map.get("email"));
		
		int result = loginService.findPw(map);
		if(result > 0) {
			try {
				vo.setSenderName("RunToYou");
				vo.setSenderMail("nny1130@gmail.com");
				vo.setSubject("Run To You == 비밀번호 재설정");
				vo.setMessage("아래의 URL을 클릭하여 비밀번호를 재설정 하세요.\n"
						+ "http://localhost/settingPw/" + map.get("empCd"));
				emailService.sendMail(vo);
			}catch(Exception e){
				return false;
			}
		}
		
		return true;
	}
}








