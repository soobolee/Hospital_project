package kr.or.ddit.patients.controller;


import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.patients.service.PatientsService;
import kr.or.ddit.patients.vo.PatientsVO;
import kr.or.ddit.reservation.service.ReservationService;
import kr.or.ddit.reservation.vo.ReservationVO;

@Controller
public class PatientsController {
	
	private static final Logger logger = LoggerFactory.getLogger(PatientsController.class);
	
	@Autowired
	PatientsService patientsService;
	
	@Autowired
	ReservationService reservationService;
	
	//환자 목록
	@GetMapping("/patients/patientsList")
	public String patientsList(Model model, @RequestParam Map<String, Object> map){
		
		logger.info(map.toString());
		List<PatientsVO> list = this.patientsService.patientsList(map);
		logger.info(list.toString());
			model.addAttribute("list", list);
			
		return "patients/patientsHome";
	}
	
	//환자 상세 정보
	@PostMapping("/patients/detail")
	@ResponseBody
	public PatientsVO detail(Model model, @RequestParam String pntCd) {
		
		logger.info("pntCd : " + pntCd);
		PatientsVO vo = this.patientsService.detail(pntCd);
		
		logger.info("PatientsVO : " + vo.toString());
		return vo;
	}
	
	//환자 삭제
	@PostMapping("/patients/deletePatients")
	@ResponseBody
	public int deletePatients(Model model, @RequestParam String pntCd) {
		
		logger.info("pntCd : " + pntCd);
		int res = this.patientsService.deletePatients(pntCd);
		
		return res;
	} 
	
	//예약 목록
	@PostMapping("/reservation/reservlist")
	@ResponseBody
	public List<ReservationVO> reservlist(Model model, @RequestParam String pntCd) {
		
		List<ReservationVO> rslist = this.reservationService.reservlist(pntCd);
		logger.info("rslist" + rslist.toString());

		return rslist;
	}
	
	//바이탈사인 리스트
	@PostMapping("/patients/vslist")
	@ResponseBody
	public List<PatientsVO> vslist(Model model, @RequestParam String pntCd) {
		
		List<PatientsVO> vslist = this.patientsService.vslist(pntCd);
		logger.info("vslist" + vslist.toString());
		
		return vslist;
	}
	
	//환자 등록
		@GetMapping("/patients/patientsInsert")
		public void insertPatients(Model model) {
			
			
		}
}
