package kr.or.ddit.ent.controller;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.ent.service.EntService;
import kr.or.ddit.ent.vo.EntVO;
import kr.or.ddit.ent.vo.WardVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/ent")
@Controller
public class EntController {
	
	private static final Logger logger = LoggerFactory.getLogger(EntController.class);
	
	@Autowired 
	EntService entService;
	
	// 메인 페이지로 가는 ------ 입원 대기중인 환자 정보, 병동의 조직도, 입원 중인 환자의 정보를 가져감
	@GetMapping("/main")
	private String entMain(Model model) {
		List<EntVO> entVO = entService.entWardPntList();
		List<EntVO> waitEtVO = entService.entPatientList();
		List<WardVO> wardVOList = entService.getWard();
		
		model.addAttribute("waitPnt", waitEtVO);
		model.addAttribute("entVO", entVO);
		model.addAttribute("wardVOList", wardVOList);   // resultMap 을 이용하여 병동1 : 호실N 의 관계로 가져옴
		
		return "ent/entHome";
	}
	
	// Modal에 환자 상세 정보를 출력하는 메서드
	@PostMapping("/pntModal")
	@ResponseBody
	private EntVO pntModal(Model model, @RequestParam String pntCd) {
		EntVO waitPntDetail = entService.patientDetail(pntCd);
		
		return waitPntDetail;
	}
	
	// 관리자 병동 추가 버튼 -------------
	@GetMapping("/adminBed")
	private String adminBed(Model model) {
		List<WardVO> wardVOList = entService.getWard();
		
		model.addAttribute("wardVOList", wardVOList);
		return "ent/adminBed";
	}
	
	@GetMapping("/getRoom")
	@ResponseBody
	private List<EntVO> getRoom(@RequestParam String roomCls){
		List<EntVO> liEntVO = entService.getRoom(roomCls);

		return  liEntVO;
	}
	
	@GetMapping("/saveRoom")
	@ResponseBody
	private int saveRoom(@RequestParam Map<String, Object> map) {
		int saveRst = entService.saveRoom(map);
		
		return saveRst;
	}
	
	// 등록 버튼을 누르면 테두리 있는 애가 선택되어 입원 환자로 상태코드 및 ent테이블에 추가되는 코드	
	@PostMapping("/updateEnt")
	@ResponseBody
	private int uppdateEnt(@RequestParam Map<String, Object> map) {
		logger.info(map.toString());
		int updateEnt = entService.updateEnt((String)map.get("pntCd"));
		int insertEnt = entService.insertEnt(map);
		
		return 1;
	}
	
}
