<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied"
		class="kr.or.ddit.security.CustomAccessDeniedHandler" />
	
	<bean id="customLoginSuccess"
	 	class="kr.or.ddit.security.CustomLoginSuccessHandler" />
	 	
	<!-- 사용자가 정의한 비밀번호 암호화 처리기를 빈으로 등록 -->
	<bean id="customPasswordEncoder"
		class="kr.or.ddit.security.CustomNoOpPasswordEncoder"></bean>
		
<!-- 	<bean id="bcryptPasswordEncoder" -->
<!--         class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> -->
        
	<!-- 스프링 시큐리티의 UserDetailService를 구현해서 사용자의 상세 정보를 얻어오기 위함 -->
	<bean id="customUserDetailService" 
		class="kr.or.ddit.security.CustomUserDetailService"></bean>
		
	<bean id="logoutSuccessHandler" 
		class="kr.or.ddit.security.CustomLogoutSuccessHandler"></bean>
		
	<security:http>
	<!-- 
	URI 패턴으로 접근 제한을 설정함
	pattetn : url 요청 경로
	access : 접근 제한 정책 (permitAll - 전체)
	-->
		<security:intercept-url pattern="/" access="isAuthenticated()" />
		<security:intercept-url pattern="/profile/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/patients/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/medical/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/ent/*" access="isAuthenticated()" />
		<security:intercept-url pattern="/operation/*" access="isAuthenticated()" />
<!-- 		<security:intercept-url pattern="/" access="isAuthenticated()" /> -->
<!-- 		<security:intercept-url pattern="/login" access="permitAll()" /> -->
<!-- 		<security:intercept-url pattern="/emp/detail/*" access="hasRole('ROLE_ADMIN')" /> -->
			
		<!-- 
		폼 기능 인증 기능 사용
		접근 제한에 걸리면 스프링 시큐리티가 기본적으로 제공하는 로그인 페이지로 이동함
		 -->
<!-- 		<security:form-login /> -->
		<security:form-login login-page="/login"
					authentication-success-handler-ref="customLoginSuccess"/>
					
<!-- 		<security:access-denied-handler ref="customAccessDenied" /> -->
		<!--
		 root-context.xml에 있는 dataSource
		 데이터소스를 지정하고 테이블(persistent_logins)을 이용해서 기존 로그인 정보를 기록
		 쿠키의 유효시간을 지정(604800 : 7일)
		 -->
<!-- 		<security:remember-me data-source-ref="dataSource" -->
<!-- 			token-validity-seconds="604800" /> -->
		
<!-- 			success-handler-ref="logoutSuccessHandler" -->
		<security:logout logout-url="/logout"
			success-handler-ref="logoutSuccessHandler"
			invalidate-session="true" 
			delete-cookies="remember-me.JSESSION_ID" />
	</security:http>
	
	<security:authentication-manager>
	<!-- 
	지정된 아이디와 패스워드로 로그인이 가능하도록 설정함
	authorities : ROLE_MEMBER, ROLE_ADMIN
	
	스프링 시큐리티 5버전 부터는 패스워드 암호화 처리기를 반드시 이용하도록 변경이 되었음
	암호화 처리기를 사용하지 않도록 "{noop}" 문자열을 비밀번호 앞에 사용
	 -->
	 	<security:authentication-provider user-service-ref="customUserDetailService">
	 		<security:password-encoder ref="customPasswordEncoder" />
	 	</security:authentication-provider>
	</security:authentication-manager>
</beans>
