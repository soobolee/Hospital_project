<%@ page language="java" contentType="text/html; charset=UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>


<link rel="stylesheet" href="/resources/fullcalendar/main.css">
<link rel="stylesheet" href="/resources/vendors/niceselect/css/nice-select.css">
<script src="/resources/fullcalendar/main.js"></script>
<script src="/resources/fullcalendar/ko.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script type="text/javascript">
$(function() {
	var csrfParameter = $("meta[name=_csrf_parameter]").attr("content");
	var csrfHeader = $("meta[name=_csrf_header]").attr("content");
	var csrfToken = $("meta[name=_csrf]").attr("content");
		today = new Date();
		today.setHours(today.getHours() + 9)
		currentdate = today.toISOString().split('T')[0];	//2022-03-31
		currenttime = today.toISOString().split('T')[1].substring(0,5);		//09:00
})


$(document).ready(function() {

	var data = {};
	//alert("${loginUser.secNm}")
	data[csrfParameter]=csrfToken;
	data["major"] = "${loginUser.secNm}";
	
	$('#selectmajor').val('${loginUser.secNm}').prop("selected",true);
	//진료부서 별 예약 목록 
	$.ajax({
		url:"/reservation/resdoctorList",
		method: "post",
		data: data,
		dataType:"html",
		traditional:"true",
		success: function(res) {
			var html = $("<div>").html(res);
			var contents = html.find("div#output").html();
			$("#resemplist").html(contents);
		}
	});
	
	//selectbox에 의사 출력
	var data = {};

	data[csrfParameter]=csrfToken;
	data["major"] = $("#selectmajor option:selected").val();

	//예약 목록 내 의사 선택
	$.ajax({
		url:"/reservation/doctorList",
		method: "post",
		data: data,
		success: function(dres) {
			//console.log(dres);
			//alert(dres)
			var listHtml = '<option value="" label="=담당의사=">=담당의사=</option>';
			if(dres!=''){
				for(var i in dres){
					listHtml +='<option id="optdoc" label="'+dres[i].empNm+'">'+dres[i].empNm+'_'+dres[i].empCd+'</option>';
				}
			}
			$("#chrDr").html(listHtml);			
		}
	})

	//진료부서 별 예약목록 출력
	$.ajax({
		url:"/reservation/majorresList",
		method:"get",
		data: data,
		success: function (res) {
			var mList = new Array();
			
			$.each(res, function(i, v) {
				$.each(v.reservation, function(j, k){
					var data = new Object();
					data.pntNm = k.pntNm;
					data.rsvtDt = k.rsvtDt;
					
				mList.push(data);
				})	
			})
			var jsonData = JSON.stringify(mList) ;
			
		    var Calendar = FullCalendar.Calendar;
		    var Draggable = FullCalendar.Draggable;
		    var calendarEl = document.getElementById('calendar');
		
		    var events = mList.map(function(item) {
				return {
					title : item.pntNm,
					start : item.rsvtDt.substring(0,4) + '-' + item.rsvtDt.substring(4,6) + '-' + item.rsvtDt.substring(6,8)  
							+ "T" + item.rsvtDt.substring(8,10) + ':' + item.rsvtDt.substring(10,12) + ':'+item.rsvtDt.substring(12,14)
				}
			});
		    
		    // initialize the calendar
		    // -----------------------------------------------------------------
		
		    var calendar = new Calendar(calendarEl, {
		      headerToolbar: {
		        left: 'prev,next today',
		        center: 'title',
		        right: 'dayGridMonth,timeGridWeek'
		      },
		      initialView: 'dayGridMonth',
		      selectable:true,
		      editable: true,
		      droppable: true, // this allows things to be dropped onto the calendar
		      drop: function(info) {
		        // is the "remove after drop" checkbox checked?
		        if (checkbox.checked) {
		          // if so, remove the element from the "Draggable Events" list
		          info.draggedEl.parentNode.removeChild(info.draggedEl);
		        }
		      },
		      locale:'ko',
		      events: events,
		      eventTimeFormat: {
				    hour: '2-digit',
				    minute: '2-digit',
				    hour12: false
				  }
		    });
		    //console.log(events)
		    calendar.render();
		}//end of success
	});//end of ajax
	
	//환자 목록 출력 
	$.ajax({
		url:"/reservation/patientsList",
		method:"get",
		success: function(res) {
			//console.log(res)
			var option = '<option>=환자 코드 이름 생년월일=</option>';
			$.each(res, function(i, v) {
				option += '<option>'+v.pntCd+' '+v.pntNm+' '+v.pntPrno.split('-')[1]+'</option>';
			})
			$("#serchPnt").append(option);
			$("#serchPnt").niceSelect('update');
		}
	})

	
});//end of function
  

  
//Byte 수 체크 제한
function fnChkByte(obj, maxByte)
{
    var str = obj.value;
    var str_len = str.length;


    var rbyte = 0;
    var rlen = 0;
    var one_char = "";
    var str2 = "";


    for(var i=0; i<str_len; i++)
    {
        one_char = str.charAt(i);
        if(escape(one_char).length > 4) {
            rbyte += 2;                                         //한글2Byte
        }else{
            rbyte++;                                            //영문 등 나머지 1Byte
        }
        if(rbyte <= maxByte){
            rlen = i+1;                                          //return할 문자열 갯수
        }
     }
     if(rbyte > maxByte)
     {
        // alert("한글 "+(maxByte/2)+"자 / 영문 "+maxByte+"자를 초과 입력할 수 없습니다.");
        alert("메세지는 최대 " + maxByte + "byte를 초과할 수 없습니다.")
        str2 = str.substr(0,rlen);                                  //문자열 자르기
        obj.value = str2;
        fnChkByte(obj, maxByte);
     }
     else
     {
        document.getElementById('byteInfo').innerText = rbyte;
     }
}

//신규예약
function newres() {
	$("#reservationVo").submit();
}

//selectbox의 진료과목 선택했을 때
$(document).on("change","#selectmajor", function() {
   
   //var data = {"major" : $("#selectmajor option:selected").val()};
   
   var data = {};

   data[csrfParameter]=csrfToken;
   data["major"] = $("#selectmajor option:selected").val();
   
   //예약 목록 내 의사 선택
   $.ajax({
      url:"/reservation/doctorList",
      method: "post",
      data: data,
      success: function(dres) {
         //console.log(dres);
         var listHtml = '<option value="" label="=담당의사=">=담당의사=</option>';
         if(dres!=''){
            for(var i in dres){
               listHtml +='<option id="optdoc" label="'+dres[i].empNm+'">'+dres[i].empNm+'_'+dres[i].empCd+'</option>';
            }
         }
         $("#chrDr").html(listHtml);   
      }
   })
   
	//진료부서 별 금일 예약 목록 
	$.ajax({
		url:"/reservation/resdoctorList",
		method: "post",
		data: data,
		dataType:"html",
		traditional:"true",
		success: function(res) {
			var html = $("<div>").html(res);
			var contents = html.find("div#output").html();
			$("#resemplist").html(contents);
		}
	});
   
   var data = {"major": $("#selectmajor option:selected").val()};
   
	//진료부서 별 예약목록 출력
	$.ajax({
		url:"/reservation/majorresList",
		method:"get",
		data: data,
		success: function (res) {
			var mList = new Array();
			
			$.each(res, function(i, v) {
				$.each(v.reservation, function(j, k){
					var data = new Object();
					data.pntNm = k.pntNm;
					data.rsvtDt = k.rsvtDt;
					
				mList.push(data);
				})	
			})
			var jsonData = JSON.stringify(mList) ;
			
		    var Calendar = FullCalendar.Calendar;
		    var Draggable = FullCalendar.Draggable;
		    var calendarEl = document.getElementById('calendar');
		
		    var events = mList.map(function(item) {
				return {
					title : item.pntNm,
					start : item.rsvtDt.substring(0,4) + '-' + item.rsvtDt.substring(4,6) + '-' + item.rsvtDt.substring(6,8)  
							+ "T" + item.rsvtDt.substring(8,10) + ':' + item.rsvtDt.substring(10,12) + ':'+item.rsvtDt.substring(12,14)
				}
			});
		    
		    // initialize the calendar
		    // -----------------------------------------------------------------
		
		    var calendar = new Calendar(calendarEl, {
		      headerToolbar: {
		        left: 'prev,next today',
		        center: 'title',
		        right: 'dayGridMonth,timeGridWeek'
		      },
		      initialView: 'dayGridMonth',
		      selectable:true,
		      editable: true,
		      droppable: true, // this allows things to be dropped onto the calendar
		      drop: function(info) {
		        // is the "remove after drop" checkbox checked?
		        if (checkbox.checked) {
		          // if so, remove the element from the "Draggable Events" list
		          info.draggedEl.parentNode.removeChild(info.draggedEl);
		        }
		      },
		      locale:'ko',
		      events: events,
		      eventTimeFormat: {
				    hour: '2-digit',
				    minute: '2-digit',
				    hour12: false
				  }
		    });
		    //console.log(events)
		    calendar.render();
		}//end of success
	});//end of ajax
	
	if($("#selectmajor option:selected").val().trim() == '전체부서'){
	alert("전체 보기쥬??")
		//전체 예약목록 출력
		$.ajax({
			url:"/reservation/allList",
			method:"get",
			success: function (res) {
				var list = res;	
				
			    var Calendar = FullCalendar.Calendar;
			    var Draggable = FullCalendar.Draggable;
			    var calendarEl = document.getElementById('calendar');
			
			    var events = list.map(function(item) {
					return {
						title : item.pntNm,
						start : item.rsvDate + "T" + item.rsvTime
					}
				});
			    
			    
			    // initialize the calendar
			    // -----------------------------------------------------------------
			
			    var calendar = new Calendar(calendarEl, {
			      headerToolbar: {
			        left: 'prev,next today',
			        center: 'title',
			        right: 'dayGridMonth,timeGridWeek'
			      },
			      initialView: 'dayGridMonth',
			      selectable:true,
			      editable: true,
			      droppable: true, // this allows things to be dropped onto the calendar
			      drop: function(info) {
			        // is the "remove after drop" checkbox checked?
			        if (checkbox.checked) {
			          // if so, remove the element from the "Draggable Events" list
			          info.draggedEl.parentNode.removeChild(info.draggedEl);
			        }
			      },
			      locale:'ko',
			      events: events,
			      eventTimeFormat: {
					    hour: '2-digit',
					    minute: '2-digit',
					    hour12: false
					  }
			    });
			    //console.log(events)
			    calendar.render();
			}//end of success
		});//end of ajax
	
	}
})

//의사 선택했을 때 
$(document).on("change","#chrDr", function() {
	var data = {};
	var split = $("#chrDr option:selected").val().split('_');
	
	data[csrfParameter]=csrfToken;
	data["empCd"] = split[1].trim();
	
	$("#empCd").attr("value", split[1].trim());
	$("#empNm").attr("value", split[0].trim());
	
	//의사별 예약목록 출력
	$.ajax({
		url:"/reservation/docList",
		method:"post",
		data: data,
		success: function (res) {
			var list = res;
			//console.log(list)
	
			
		    var Calendar = FullCalendar.Calendar;
		    var Draggable = FullCalendar.Draggable;
		    var calendarEl = document.getElementById('calendar');
		
		    var events = list.map(function(item) {
				return {
					title : item.pntNm,
					start : item.rsvDate + "T" + item.rsvTime
				}
			});
		    
		    // initialize the calendar
		    // -----------------------------------------------------------------
		
		    var calendar = new Calendar(calendarEl, {
		      headerToolbar: {
		        left: 'prev,next today',
		        center: 'title',
		        right: 'dayGridMonth,timeGridWeek'
		      },
		      initialView: 'dayGridMonth',
		      selectable:true,
		      editable: true,
		      droppable: true, // this allows things to be dropped onto the calendar
		      drop: function(info) {
		        // is the "remove after drop" checkbox checked?
		        if (checkbox.checked) {
		          // if so, remove the element from the "Draggable Events" list
		          info.draggedEl.parentNode.removeChild(info.draggedEl);
		        }
		      },
		      locale:'ko',
		      dateClick:function(info){
		    	var day = new Date();
		    	  var year = day.getFullYear();
		    	  var month = ('0' + (day.getMonth() + 1)).slice(-2);
		    	  var day = ('0' + day.getDate()).slice(-2);
		    	  var pntinfo = $('.current').text();
		    	  var pntsplit = pntinfo.split(' ');
		
		    	  var todayFormat = year + '-' + month  + '-' + day;
		    	  
		    	  $("#pntNm").attr("value", pntsplit[1].trim());
		    	  $("#pntCd").attr("value", pntsplit[0].trim());
		    		
		    	  if(info.dateStr < todayFormat){
		    		  swal("예약 불가","예약은 오늘 날짜 이후부터 가능합니다.", "warning");
		    	  }else if(todayFormat <= info.dateStr){
			      	$("#exampleModal").modal("show");
			      	$("#rsvDate").attr("value", info.dateStr)    		  
		    	  }
		      },
		      events: events,
		      eventTimeFormat: {
				    hour: '2-digit',
				    minute: '2-digit',
				    hour12: false
				  }
		    });
		
		    calendar.render();
		}//end of success
	});//end of ajax
})

//캘린더의 날짜를 클릭했을 때 
$(document).on("click", ".fc-daygrid-day-frame", function(){
	var child = $(this).find(".fc-event-time");
	//console.log(child)
	childVal = '';
	for(var i=0; i<child.length;i++){
		childVal += child.eq(i).text()+"/"		
	}
	
	var arr = childVal.split('/')	//해당날짜에 예약되어있는 시간
	//console.log("arr", arr)
	
	//console.log(childVal)
	 clickdate = $(this).parent().attr('data-date')	//클릭한 날의 날짜 2022-03-31

	var values = $.map($('#hour option'), function(e) { return e.value; }); 
	
	//console.log(values)
	//console.log(currentdate.trim())
	//console.log(clickdate.trim())

	for(var i=1; i<values.length; i++){
		if(values[i]<= currenttime && currentdate.trim() == clickdate.trim()){
			//console.log($("#hour option:contains("+values[i]+")").val())
			$("#hour option:contains("+values[i]+")").css("color", "lightgray")
			$("#hour option:contains("+values[i]+")").attr("disabled", true)
		}else if(!(currentdate.trim() == clickdate.trim())){
			$("#hour option:contains("+values[i]+")").css("color", "black")
			$("#hour option:contains("+values[i]+")").attr("disabled", false)
		}
		for(var j=0; j<arr.length; j++){
			if(values[i] == arr[j]){
				$("#hour option:contains("+values[i]+")").css("color", "lightgray")
				$("#hour option:contains("+values[i]+")").attr("disabled", true)
			}
			
		}
	}
	
})

//예약 시간 출력
$(document).on("change","#hour", function() {
		var timevalue = $("#hour option:selected").val();
		var timeVal = $("#rsvTime").attr("value", timevalue+":00")
})

//예약일정 클릭 시 이벤트
$(document).on("click", ".fc-daygrid-event", function() {
	$("#detailresModal").modal("show")
})
</script>

<style>
#calendar{
	width: 640px;
	height:450px;
	float: left;
}
.timetable{
	width: 80%;
	margin-left: 10%; 
	margin-top: 10%; 
	text-align: center;
}
.harftime{
	border-top: 1px dotted;
}
#selectmajor, #chrDr{
	background-color: #fff;
    border-radius: 5px;
    border: solid 1px #e8e8e8;
    font-family: inherit;
    font-size: 14px;
    font-weight: 400;
    height: 42px;
    line-height: 40px;
    outline: none;
    padding-left: 18px;
}
   /* 스크롤바 설정*/
	.fc-scroller::-webkit-scrollbar{
	    width: 6px;
	}
	
	/* 스크롤바 막대 설정*/
	.fc-scroller::-webkit-scrollbar-thumb{
	    height: 17%;
	    background-color: rgba(33,133,133,1);
	    border-radius: 10px;  
	}
	
	/* 스크롤바 뒷 배경 설정*/
	.fc-scroller::-webkit-scrollbar-track{
	    background-color: rgba(33,133,133,0.33);
	}
	.harf{
		border-top: 1px dotted;
	}
	    /* 스크롤바 설정*/
	.type2::-webkit-scrollbar{
	    width: 6px;
	}
	
	/* 스크롤바 막대 설정*/
	.type2::-webkit-scrollbar-thumb{
	    height: 17%;
	    background-color: rgba(33,133,133,1);
	    border-radius: 10px;  
	}
	
	/* 스크롤바 뒷 배경 설정*/
	.type2::-webkit-scrollbar-track{
	    background-color: rgba(33,133,133,0.33);
	}
	.cardst{
		width: 200px; 
		margin-right:10px; 
		display:inline-block;
	}
	 #tbl{
		width: 100%;
		text-align: center;
	 }
	 .tblout{
	  	height: 330px; 
 	 	overflow-y: auto;
	 }
</style>
<div class="main_content_iner ">
	<div class="container-fluid p-0">
		<div class="row justify-content-center">
		<div class="col-12">
		<div class="QA_section">
		<div class="white_box_tittle list_header">
			<h4>예약</h4>
		</div>
		<div class="white_box" style="height: 100%;">
		<!-- 환자 검색 -->
		<div style="width: 650px; display: inline-block;">
		<div style="width: 200px; float:left; margin-right: 70px;">
			<h6>환자 검색</h6>
			<select class="nice_Select" id="serchPnt" >
			</select>			
		</div>
		<!-- 환자 검색 -->
		<!-- 의사  -->
		<div style="width: auto; display:inline-block;">
			<h6>담당 의사</h6>
			<form:form modelAttribute="patientsVo" name="patientsVo" method="get" action="/reservation/main">
			<form:select path="" id="selectmajor" style="margin-right:5px;">
				<form:option value="" label="=진료과목="/>	
				<form:option value="전체부서" label="전체부서"/>	
				<c:forEach var="major" items="${majorlist}">
					<form:option value="${major.major}" label="${major.major}" />
				</c:forEach>
			</form:select>
			
			<form:select path="chrDr" id="chrDr" style="width:170px;">
				
			</form:select>
			</form:form>
		</div>
		<!-- 의사  -->
		<br>
			<div id="calendar" class="type2"></div>
		</div>
			
		<!-- 의사별 일정 보기 -->
		<div style="width: 59%; float: right;">
			<div class="white_box card_height_100">
			<div class="box_header border_bottom_1px  ">
			<div class="main-title">
			<h3 class="mb_25">금일 예약 현황</h3>
			</div>
			</div>
				<div id="resemplist">
				
				</div>
			</div>
		</div>
		</div>
		</div>
		</div>
		</div>
	</div>
</div>


 <!-- 예약 등록 Modal --> 
 <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document"> 
  <div class="modal-content">
   <div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">신규예약</h5>
     <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
     </button> 
   </div> 
  <div class="modal-body">
  <form:form modelAttribute="reservationVo" method="post" name="addreservation" action="/reservation/addreservation">
  <sec:csrfInput/>
	담당 의사 : <input type="text" id="empNm" name="empNm">	
	<input type="text" id="empCd" name="empCd" style="display: none;">	
	<br><br>	
	예약 일자 : <input type="text" id="rsvDate" name="rsvDate">
	<br><br>
	예약 시간 : <select id="hour">
				<option>-선택-</option>
				<option>09:00</option>
				<option>09:30</option>
				<option>10:00</option>
				<option>10:30</option>
				<option>11:00</option>
				<option>11:30</option>
				<option>13:00</option>
				<option>13:30</option>
				<option>14:00</option>
				<option>14:30</option>
				<option>15:00</option>
				<option>15:30</option>
				<option>16:00</option>
				<option>16:30</option>
				<option>17:00</option>
				<option>17:30</option>
				<option>18:00</option>
			</select>
			<input type="text" id="rsvTime" name="rsvTime" style="display: none;">
	<br><br>	
	환자 이름 : <input type="text" id="pntNm" name="pntNm" value="">	
	<input type="text" id="pntCd" name="pntCd" value="" style="display: none;">	
	<br><br>
	
	환자 구분 : <input type="radio" name="sortPnt" value="초진">_초진&nbsp;
	<input type="radio" name="sortPnt" value="재진">_재진
	<br><br>	
	내원 사유 : 
	<br>
	<textarea id="symptoms" name="symptoms" cols="63" rows="4" style="resize: none;" onKeyUp="javascript:fnChkByte(this,'100')"></textarea>
	<div style="float: right;"><span id="byteInfo">0</span>/100bytes</div>
  </form:form>
  </div> 
  <div class="modal-footer">
   <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="button" class="btn btn-primary" onclick="newres()">등록</button>
  </div> 
  </div> 
  </div> 
 </div>
 
 <!-- 예약 상세 Modal --> 
 <div class="modal fade" id="detailresModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document"> 
  <div class="modal-content">
   <div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">예약상세</h5>
     <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
     </button> 
   </div> 
  <div class="modal-body">
  <form:form modelAttribute="reservationVo" method="post" name="addreservation" action="/reservation/addreservation">
  <sec:csrfInput/>
	담당 의사 : <input type="text" id="empNm" name="empNm">	
	<input type="text" id="empCd" name="empCd" style="display: none;">	
	<br><br>	
	예약 일자 : <input type="text" id="rsvDate" name="rsvDate">
	<br><br>
	예약 시간 : <select id="hour">
				<option>-선택-</option>
				<option>09:00</option>
				<option>09:30</option>
				<option>10:00</option>
				<option>10:30</option>
				<option>11:00</option>
				<option>11:30</option>
				<option>13:00</option>
				<option>13:30</option>
				<option>14:00</option>
				<option>14:30</option>
				<option>15:00</option>
				<option>15:30</option>
				<option>16:00</option>
				<option>16:30</option>
				<option>17:00</option>
				<option>17:30</option>
				<option>18:00</option>
			</select>
			<input type="text" id="rsvTime" name="rsvTime" style="display: none;">
	<br><br>	
	환자 이름 : <input type="text" id="pntNm" name="pntNm" value="">	
	<input type="text" id="pntCd" name="pntCd" value="" style="display: none;">	
	<br><br>
	
	환자 구분 : <input type="radio" name="sortPnt" value="초진">_초진&nbsp;
	<input type="radio" name="sortPnt" value="재진">_재진
	<br><br>	
	내원 사유 : 
	<br>
	<textarea id="symptoms" name="symptoms" cols="63" rows="4" style="resize: none;" onKeyUp="javascript:fnChkByte(this,'100')"></textarea>
	<div style="float: right;"><span id="byteInfo">0</span>/100bytes</div>
  </form:form>
  </div> 
  <div class="modal-footer">
   <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="button" class="btn btn-primary" onclick="newres()">등록</button>
  </div> 
  </div> 
  </div> 
 </div>
